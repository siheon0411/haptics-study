
; Simulation Profile 
; This file is created for the InnoMI protocol and runs on InnoMP.
; You need a Telemetry Sender that uses InnoMI Game Plugins (Unity).

;
; system configuration

[Simulation]
name = InnoMI
version = 1300

[MotionSystem]
name = InnoMotionSystem
motions = 4
motion0_url = ../MotionData_Sample.csv
motion1_url = ../MotionData_Collision.csv
motion2_url = ../MotionData_Vib_1s.csv
motion3_url = ../MotionData_Vib_5s.csv

[NetworkSystem]
name = InnoNetworkSystem

;
; model configuration

[Packet]
enable = 1
server = 1	;client|server
; [TCP|UDP]://localhost:49288
; [IPC]://$InnoMI$
type = UDP	;UDP|TCP
host = localhost ;xxx.xxx.xxx.xxx
port = 49288
size = 132
; telemetry buffer
channels = 6	; max 12
telemetry0_axis = 7 
telemetry0_name = Roll_Speed
telemetry1_axis = 8
telemetry1_name = Pitch_Speed
telemetry2_axis = 9 
telemetry2_name = Yaw_Speed
telemetry3_axis = 16
telemetry3_name = Surge_Acc
telemetry4_axis = 17
telemetry4_name = Sway_Acc
telemetry5_axis = 18
telemetry5_name = Heave_Acc

[Surface]
enable = 1
fullscreen = 0
width = 640
height = 240
margin = 10
graphs = 3	; reference buffers
graph0_buffer = Telemetry
graph1_buffer = MotionInput
graph2_buffer = MotionContext

[MotionContext]
enable = 1
pause = 0	; auto start
id = 11		; motion device id
async = 1
volume = 100
; motion context buffer
samples = 1	; latency = samples*(1000/sampleRate)
buffers = 2	; single/double buffer
sampleRate = 50
channels = 6

[MotionSource]
enable = 1
pause = 0
loop = 0	; 255
volume = 100
speed = 100
;clip = 0 	; library id

[MotionInput]
enable = 1
; motion input buffer
sampleRate = 50
channels = 6

[Axis0]
name = Surge(m/s^2)
filter_highpassFactorA = 100
filter_highpassFactorB = 100  
filter_highpassFactorC = 100  
filter_smoothFactor = 1
filter_outputFactor = 100
filter_outputCutoff = 127 
maths = 1 
math0_type = 0
math0_input = 3
math0_offset = 0
math0_factor = -10
math0_min = -100
math0_max = 100

[Axis1]
name = Sway(m/s^2)
filter_highpassFactorA = 100
filter_highpassFactorB = 100  
filter_highpassFactorC = 100  
filter_smoothFactor = 1
filter_outputFactor = 100
filter_outputCutoff = 127 
maths = 1 
math0_type = 0
math0_input = 4
math0_offset = 0
math0_factor = 10
math0_min = -100
math0_max = 100

[Axis2]
name = Heave(m/s^2)
filter_highpassFactorA = 100
filter_highpassFactorB = 100  
filter_highpassFactorC = 100  
filter_smoothFactor = 1
filter_outputFactor = 100
filter_outputCutoff = 127 
maths = 1 
math0_type = 0
math0_input = 5
math0_offset = 0
math0_factor = 10
math0_min = -100
math0_max = 100

[Axis3]
name = Roll(rad/s)
filter_highpassFactorA = 100
filter_highpassFactorB = 100  
filter_smoothFactor = 1
filter_outputFactor = 10
filter_outputCutoff = 127 
maths = 1 
math0_type = 0
math0_input = 0
math0_offset = 0
math0_factor = -100
math0_min = -100
math0_max = 100

[Axis4]
name = Pitch(rad/s)
filter_highpassFactorA = 100
filter_highpassFactorB = 100  
filter_smoothFactor = 1
filter_outputFactor = 10
filter_outputCutoff = 127 
maths = 1 
math0_type = 0
math0_input = 1
math0_offset = 0
math0_factor = 100
math0_min = -100
math0_max = 100

[Axis5]
name = Yaw(rad/s)
filter_highpassFactorA = 100
filter_highpassFactorB = 100  
filter_smoothFactor = 1
filter_outputFactor = 10
filter_outputCutoff = 127  
maths = 1 
math0_type = 0
math0_input = 2
math0_offset = 0
math0_factor = -50
math0_min = -100
math0_max = 100

[Axis6]
name = Tilt1(roll)
filter_lowpassFactorA = 50
filter_lowpassFactorB = 50  
filter_smoothFactor = 1
filter_outputFactor = 10
filter_outputCutoff = 127 

[Axis7]
name = Tilt2(pitch)
filter_lowpassFactorA = 50
filter_lowpassFactorB = 50  
filter_smoothFactor = 1
filter_outputFactor = 10
filter_outputCutoff = 127 
